version: '3.8'
services:
  # An ephermerally-stored postgres database for single-use test runs
  bluesky-postgres_test:
    image: postgres:16
    container_name: bluesky-postgres_test
    environment:
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=password
    ports:
      - '5433:5432'
    # Healthcheck ensures db is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: 'pg_isready -U pg'
      interval: 500ms
      timeout: 10s
      retries: 20
    volumes:
      - /data/vm/bluesky-postgres/var/lib/postgresql/data:/var/lib/postgresql/data
    networks:
      - bluesky_net

  # An ephermerally-stored redis cache for single-use test runs
  bluesky-redis:
    image: redis:7.0-alpine
    container_name: bluesky-redis
    # Healthcheck ensures redis is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: ['CMD-SHELL', '[ "$$(redis-cli ping)" = "PONG" ]']
      interval: 500ms
      timeout: 10s
      retries: 20
    volumes:
      - /data/vm/bluesky-redis/data:/data
    networks:
      - bluesky_net

  bluesky:
    image:  bluesky
    container_name: bluesky
    environment:
      - DB_POSTGRES_URL=postgresql://pg:password@bluesky-postgres_test:5432/postgres
      - REDIS_HOST=bluesky-redis:6379
    ports:
      - "2584:2584"  # For Node.js debugger
      - "2583:2583"  # For Node.js debugger

    depends_on:
      bluesky-postgres_test:
        condition: service_healthy
      bluesky-redis:
        condition: service_healthy
    networks:
      - bluesky_net

  blueskyweb:
    image:  blueskyweb
    container_name: blueskyweb
    environment:
      - ATP_APPVIEW_HOST=http://bluesky:2584
      - GOLOG_LOG_LEVEL=info
    ports:
      - "19006:19006"  # For Node.js debugger
    networks:
      - bluesky_net

networks:
  bluesky_net:
    driver: bridge
