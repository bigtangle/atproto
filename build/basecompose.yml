version: '3.8'
services:
  # An ephermerally-stored postgres database for single-use test runs
  db_test:
    image: postgres:14.4-alpine
    environment:
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=password
    ports:
      - '5433:5432'
    # Healthcheck ensures db is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: 'pg_isready -U pg'
      interval: 500ms
      timeout: 10s
      retries: 20
    volumes:
      - /data/vm/atp_db/var/lib/postgresql/data:/var/lib/postgresql/data
    networks:
      - bluesky_net
  # An ephermerally-stored redis cache for single-use test runs
  redis_test:
    image: redis:7.0-alpine
    ports:
      - '6380:6379'
    # Healthcheck ensures redis is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: ['CMD-SHELL', '[ "$$(redis-cli ping)" = "PONG" ]']
      interval: 500ms
      timeout: 10s
      retries: 20
    volumes:
      - /data/vm/atp_redis/data:/data
    networks:
      - bluesky_net

  bluesky:
    image:  bluesky
    environment:
      - DB_POSTGRES_URL=postgresql://pg:password@db_test:5432/postgres
      - REDIS_HOST=redis_test:6379
    ports:
      - "2584:2584"  # For Node.js debugger
      - "2583:2583"  # For Node.js debugger

    depends_on:
      db_test:
        condition: service_healthy
      redis_test:
        condition: service_healthy
    networks:
      - bluesky_net


networks:
  bluesky_net:
    driver: bridge
